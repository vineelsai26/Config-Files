name: Run GitHub Backup

on:
    push:
        branches: ["main"]
        paths:
            - "Automations/GitHub Backup/**"
            - ".github/workflows/Backup.yml"
    schedule:
        - cron: "0 0 1 * *"

env:
    AUTH_TOKEN: ${{ secrets.TF_AUTH_TOKEN }}
    BASE_DIR: ${{ vars.BASE_DIR }}
    TF_VAR_github_token: ${{ secrets.AUTH_TOKEN }}
    TF_VAR_aws_bucket_name: ${{ vars.AWS_BUCKET_NAME }}
    TF_VAR_aws_bucket_region: ${{ vars.AWS_BUCKET_REGION }}
    TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
    TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
    TF_VAR_aws_region: ${{ vars.AWS_REGION }}
    TF_VAR_aws_region_az: ${{ vars.AWS_REGION_AZ }}
    TF_VAR_vpc_cidr_block: 10.0.0.0/16
    TF_VAR_subnet_cidr_block: 10.0.1.0/24
    TF_VAR_private_ip: 10.0.1.10
    TF_INPUT: 0

jobs:
    build:
        runs-on: ubuntu-latest
        if: contains(github.event.head_commit.message, 'skip ci') == false
        steps:
            - uses: actions/checkout@v3
            - name: Install Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: 1.4.2
            - name: Terraform Init
              working-directory: Automations/GitHub Backup/terraform
              run: terraform init
            - name: Terraform Plan
              working-directory: Automations/GitHub Backup/terraform
              run: terraform plan
            - name: Terraform Apply
              working-directory: Automations/GitHub Backup/terraform
              run: terraform apply -auto-approve -input=false
            - name: Sleep
              run: sleep 4h
            - name: Terraform Destroy
              working-directory: Automations/GitHub Backup/terraform
              run: terraform destroy -auto-approve
